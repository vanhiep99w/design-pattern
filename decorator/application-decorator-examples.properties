# Decorator Pattern Configuration Examples
# Copy the desired configuration to application.properties or use as a profile

# ============================================
# Example 1: Minimal Stack (Default)
# ============================================
# Only logging decorator
decorator.stack=minimal

# ============================================
# Example 2: Caching Stack
# ============================================
# Logging + Caching
# Uncomment to activate:
# decorator.stack=caching-only
# decorator.caching.ttl=60000

# ============================================
# Example 3: Secure Stack
# ============================================
# Logging + Encryption
# Uncomment to activate:
# decorator.stack=secure
# decorator.encryption.key=my-super-secret-key-change-me-in-production

# ============================================
# Example 4: Full Stack
# ============================================
# All decorators: Logging + Caching + Encryption + Feature Toggle
# Uncomment to activate:
# decorator.stack=full
# decorator.caching.ttl=60000
# decorator.encryption.key=my-super-secret-key-change-me-in-production
# decorator.feature-toggle.feature-name=data-service
# decorator.feature-toggle.initially-enabled=true

# ============================================
# Configuration Parameters Reference
# ============================================

# Stack Selection (choose one)
# - minimal: Only logging (default)
# - caching-only: Logging + Caching
# - secure: Logging + Encryption
# - full: All decorators
# decorator.stack=minimal

# Caching Configuration
# Time-to-live in milliseconds (default: 60000 = 1 minute)
# decorator.caching.ttl=60000

# Encryption Configuration
# Encryption key for data protection
# IMPORTANT: Change this in production!
# decorator.encryption.key=default-secret-key-change-me

# Feature Toggle Configuration
# Feature name for identification
# decorator.feature-toggle.feature-name=data-service
# Initially enabled state
# decorator.feature-toggle.initially-enabled=true
